trigger:
    branches:
        include:
            - dev
            - test
            - acc
            - main

pool:
    #vmImage: windows-latest
    name: 'PZH-Ubuntu-Agent'

variables:
    - name: 'storage_dev'
      value: 'obfrontenddev'
    - name: 'storage_test'
      value: 'obfrontendtest'
    - name: 'storage_acc'
      value: 'obfrontendacc'
    #- name: 'storage_main'
    #  value: 'obfrontend'

stages:
    - stage: Build
      jobs:
          - job:
            displayName: Build the application
            steps:
                - task: NodeTool@0
                  inputs:
                      versionSpec: '16.17.x'
                  displayName: 'Install Node.js'

                - task: CmdLine@2
                  displayName: 'Install dependencies'
                  inputs:
                      script: yarn install

                - task: CmdLine@2
                  displayName: 'Set env'
                  inputs:
                      script: export VITE_API_ENV=$(Build.SourceBranchName)

                - task: CmdLine@2
                  displayName: 'Build'
                  inputs:
                      script: yarn build

                - task: PublishBuildArtifacts@1
                  inputs:
                      PathtoPublish: $(System.DefaultWorkingDirectory)/build
                      ArtifactName: BuildedApp

    - stage: Dev
      dependsOn:
          - Build
      condition: eq(variables['Build.SourceBranchName'], 'dev')
      jobs:
          - deployment:
            displayName: Dev deploy
            environment: Dev
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - script: echo Running in the Dev environment as deployment job

    - stage: DeployToAzureBlob
      dependsOn:
          - Dev
      jobs:
          - job: DeployToAzureBlob
            displayName: 'Deploy to Azure Blob Storage'
            steps:
                - task: AzureFileCopy@4
                  displayName: 'AzureBlob File Copy'
                  inputs:
                      SourcePath: '$(System.DefaultWorkingDirectory)/_Provincie-Zuid-Holland.Omgevingsbeleid-Frontend'
                      azureSubscription: 'pzh-dta'
                      Destination: AzureBlob
                      storage: $[variables[format('storage_{0}', variables['VITE_API_ENV'])]]
                      ContainerName: '$web'
                      AdditionalArgumentsForBlobCopy: '--recursive'
                  condition: and(succeeded(), in(variables['Build.SourceBranchName'], 'dev', 'test', 'acc'))

    # - stage: Test
    #   dependsOn:
    #       - Dev
    #   jobs:
    #       - deployment:
    #         displayName: Test deploy
    #         environment: Test
    #         strategy:
    #             runOnce:
    #                 deploy:
    #                     steps:
    #                         - task: CmdLine@2
    #                           displayName: 'Set env'
    #                           inputs:
    #                               script: export VITE_API_ENV=test

    #                         - task: CmdLine@2
    #                           displayName: 'Build'
    #                           inputs:
    #                               script: yarn build

    #                         - script: echo Running in the Test environment as deployment job
    #                           displayName: 'Test based stage'

    # - stage: Acc
    #   dependsOn:
    #       - Test
    #   jobs:
    #       - deployment:
    #         displayName: Acc deploy
    #         environment: Acc
    #         strategy:
    #             runOnce:
    #                 deploy:
    #                     steps:
    #                         - task: CmdLine@2
    #                           displayName: 'Set env'
    #                           inputs:
    #                               script: export VITE_API_ENV=acc

    #                         - task: CmdLine@2
    #                           displayName: 'Build'
    #                           inputs:
    #                               script: yarn build

    #                         - script: echo Running in the Acc environment as deployment job
    #                           displayName: 'Acc based stage'
