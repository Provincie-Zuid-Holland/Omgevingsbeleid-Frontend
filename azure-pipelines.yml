trigger:
    branches:
        include:
            - dev
            - test
            - acc
            - main

pool:
    name: 'PZH-Agent'

variables:
    subscription: 'dta-omgevingsbeleid'
    VITE_API_ENV: $(Build.SourceBranchName)
    YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn/cache

stages:
    - stage: Build
      displayName: Build and Test the application
      jobs:
          - job:
            steps:
                # Cache .yarn/cache for faster installs
                - task: Cache@2
                  inputs:
                      key: 'yarn | $(Agent.OS) | yarn.lock'
                      restoreKeys: |
                          yarn | $(Agent.OS)
                          yarn
                      path: $(YARN_CACHE_FOLDER)
                  displayName: Cache dependencies

                - task: NodeTool@0
                  inputs:
                      versionSpec: '18.x'
                  displayName: Install Node.js

                  # Enable Corepack
                - script: corepack enable
                  displayName: 'Enable Corepack'

                - task: CmdLine@2
                  displayName: 'Install dependencies'
                  inputs:
                      script: 'yarn --immutable'

                - task: CmdLine@2
                  displayName: Run the tests and generate coverage report
                  inputs:
                      script: yarn test:coverage

                - task: PublishCodeCoverageResults@1
                  inputs:
                      codeCoverageTool: Cobertura
                      summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml

                - task: CmdLine@2
                  displayName: Build
                  inputs:
                      script: yarn build

                - task: PublishBuildArtifacts@1
                  inputs:
                      PathtoPublish: $(Build.SourcesDirectory)/build
                      ArtifactName: BuildedApp_$(Build.BuildId)

    - stage: Dev
      displayName: Dev deploy
      dependsOn:
          - Build
      condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'dev'))
      jobs:
          - deployment:
            displayName: Dev deploy
            environment: Dev
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - template: azure-file-copy.yml
                              parameters:
                                  storageName: 'obfrontenddev'

    - stage: Test
      displayName: Test deploy
      dependsOn:
          - Build
      condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'test'))
      jobs:
          - deployment:
            displayName: Test deploy
            environment: Test
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - template: azure-file-copy.yml
                              parameters:
                                  storageName: 'obfrontendtest'
                            - template: azure-purge-cdn.yml
                              parameters:
                                  profileName: 'obzhtest'

    - stage: Acc
      displayName: Acc deploy
      dependsOn:
          - Build
      condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'acc'))
      jobs:
          - deployment:
            displayName: Acc deploy
            environment: Acc
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - template: azure-file-copy.yml
                              parameters:
                                  storageName: 'obfrontendacc'
                            - template: azure-purge-cdn.yml
                              parameters:
                                  profileName: 'obzhacc'

    - stage: Prod
      displayName: Prod deploy
      dependsOn:
          - Build
      condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))
      jobs:
          - deployment:
            displayName: Prod deploy
            environment: Prod
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - template: azure-file-copy.yml
                              parameters:
                                  storageName: 'obfrontendprod'
                            - template: azure-purge-cdn.yml
                              parameters:
                                  profileName: 'obzhprod'
